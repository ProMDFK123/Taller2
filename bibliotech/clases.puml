@startuml
skin rose

Class Libro{
-isbn: String
-titulo: String
-autor: String
-categoria: String
-calificacion: double
-cantidadCalificaciones: int
-ISBN: Pattern
+Libro(isbn: String, titulo: String, autor: String, categoria: String, cantCopias: int)
+get's()
-validarIsbn(isbn: String): void
+setCalificacion(calificacion: double): void
+setCantidadCalificaciones(cantidadCalificaciones: int): void
}

Class Socio{
-nombre: String
-apellido: String
-correoElectronico: String
-numeroSocio: int
-cantMaxLibros: int
-contrasenia: String
-librosPrestados: Libro[]
+get's()
+set(correoElectronico: String): void
+setContrasenia(contrasenia: String): void
+Socio(nombre: String, apellido: String, correoElectronico: String, numeroSocio: int, contraseña: String)
+agregarLibro(libro: Libro): void
}

Class Sistema{
-socios: Socio[]
-libros: Libros[]
-disponibles: Libros[]
-GSON: Gson
+socio: Socio
+Sistema()
+iniciarSession(numeroSocio: int, contraseña: String): void
+cerrarSesion(): void
+realizarPrestamoLibro(isbn: String): void
+obtenerCatalogoLibros(): String
+buscarLibro(isbn: String): Libro
+cargarInformacion(): void
+guardarInformacion(): void
+obtenerDatosSocio(): String
-eliminarDisponible(isbn: String): void
-validarIsbn(libro: Libro): void
-logIn(numeroSocio: int, clave: String): void
+logIn(): void
+realizarCalificacion(isbn: String): void
}

Class Utils{
-EMAIL_PATTERN: Pattern
-Password: Pattern
-Utils()
+append(theStaticArray: T[], theObject: T): <T> T[]
+validarEmail(email: String): void
+validarClave(clave: String): void
}

Sistema"1"--"1..*"Libro: posee >
Sistema"1"--"1..*"Socio: tiene >
Socio"1..*"--"5"Libro: pide >
Utils ^.. Sistema: implements
@enduml
